1. onnx tflite infer

2. tmux vim

3 onnx tflite 推理 出结果 去C 跑出框 再回到python进行数据分析



# 命令
## linux command
	ctrl alt T -> create a new terminal
	mkdir <目录名> 创建目录	
	rm -f file1 -> 删除’file1’⽂件
	rmdir dir1 删除’dir1’⽬录
 	rm -rf dir1 删除’dir1’⽬录和其内容
 	

## tmux
	tmux new -s <session-name>
	tmux detach
	tmux ls
	tmux attach -t 0
	tmux kill-session -t 0
	tmux rename-session -t 0 <new-name>
	

## vim
### Introduction
	高效的文本编辑器,常用模式有四种
### 正常模式
	浏览和修改文本内容
### 插入模式
	i -> 光标前输入文字并进入插入模式
	a -> 光标后输入文字并进入插入模式
	o -> 光标下面开一新行来输入文字并进入插入模式
	s -> 删除光标所在的字符并进入插入模式	
	I -> 在行首输入文字并进入插入模式
	A -> 在行尾输入文字并进入插入模式
	O -> 在光标上面开一新行来输入文字并进入插入模式
	S -> 删除光标所在行并进入插入模式

针对tflite代码 报错信息如下
# 模型调用
## 环境

## ONNX	
    使用onnxruntime.InferenceSession加载模型。
    获取输入名称和输出名称。
    将输入数据转换成numpy数组，符合输入形状和类型。
    运行sess.run()，得到输出。
## TFlite
    使用Interpreter加载模型文件。
    获取输入输出的详细信息，比如输入的形状和数据类型。
    可能需要调整输入数据的类型和形状，比如uint8还是float32。
    预处理图像，转换成模型需要的输入格式。
    调用interpreter.invoke()，然后获取输出张量。
    反量化
    相当于对于Tflite模型 对于输入数据要匹配类型 输出也要进行反量化
    
 ## 利用cmake编译


 

